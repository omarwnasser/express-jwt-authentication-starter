{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"loginform\"];\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(http, authService, router) {\n      this.http = http;\n      this.authService = authService;\n      this.router = router;\n    }\n\n    onLoginSubmit() {\n      const username = this.loginForm.value.username;\n      const password = this.loginForm.value.password;\n      const headers = new HttpHeaders({\n        'Content-type': 'application/json'\n      });\n      const reqObject = {\n        username: username,\n        password: password\n      };\n      this.http.post('http://localhost:3000/users/login', reqObject, {\n        headers: headers\n      }).subscribe( // The response data\n      response => {\n        // If the user authenticates successfully, we need to store the JWT returned in localStorage\n        this.authService.setLocalStorage(response);\n      }, // If there is an error\n      error => {\n        console.log(error);\n      }, // When observable completes\n      () => {\n        console.log('done!');\n        this.router.navigate(['protected']);\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    viewQuery: function LoginComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginForm = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 0,\n    consts: [[3, \"ngSubmit\"], [\"loginform\", \"ngForm\"], [\"type\", \"text\", \"name\", \"username\", \"ngModel\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\"], [\"type\", \"submit\", 2, \"margin-top\", \"20px\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onLoginSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"p\");\n        i0.ɵɵtext(6, \"Enter a username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"Enter a password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵtext(12, \"Register\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}