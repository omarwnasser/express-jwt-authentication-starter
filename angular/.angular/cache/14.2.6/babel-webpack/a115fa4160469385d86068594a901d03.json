{"ast":null,"code":"import * as moment from \"moment\";\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {}\n\n    setLocalStorage(responseObj) {\n      // Adds the expiration time defined on the JWT to the current moment\n      const expiresAt = moment().add(Number.parseInt(responseObj.expiresIn), 'days');\n      localStorage.setItem('id_token', responseObj.token);\n      localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()));\n    }\n\n    logout() {\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n    }\n\n    isLoggedIn() {\n      return moment().isBefore(this.getExpiration(), \"second\");\n    }\n\n    isLoggedOut() {\n      return !this.isLoggedIn();\n    }\n\n    getExpiration() {\n      const expiration = localStorage.getItem(\"expires_at\");\n\n      if (expiration) {\n        const expiresAt = JSON.parse(expiration);\n        return moment(expiresAt);\n      } else {\n        return moment();\n      }\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}